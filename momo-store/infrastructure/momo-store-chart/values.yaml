global:
  backendName: momo-backend
  frontendName: momo-frontend
  prometheusName: momo-prometheus
  grafanaName: momo-grafana
  frontendPort: 80
  backendPort: 8081
  grafanaPort: 3000
  prometheusPort: 9090
  imageRegistry: "gitlab.praktikum-services.ru:5050/std-000-00/momo-store"

backend:
  name: momo-backend
  revisionHistoryLimit: 12
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 20%
  image:
    name: "momo-store-backend"
    tag: "1.0.24495215"
  containerPort: 8080
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 2
    failureThreshold: 6
  vpa:
    updateMode: "Auto"
    resources:
      minAllowed:
        cpu: 250m
        memory: 64Mi
      maxAllowed:
        cpu: 1
        memory: 500Mi

frontend:
  name: momo-frontend
  revisionHistoryLimit: 12
  port: 80
  replicas: 1
  strategy: Recreate
  image:
    name: "momo-store-frontend"
    tag: "1.0.2449521"
  hpa:
    resources:
      minReplicas: 1
      maxReplicas: 5
      averageUtilization: 75
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"

prometheus:
  name: momo-prometheus
  port: 9090
  replicas: 1
  strategy: Recreate
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"
  persistence:
    size: "1Gi"
    storageClass: "yc-network-hdd" 
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    fsGroup: 65534

grafana:
  name: momo-grafana
  port: 3000
  replicas: 1
  strategy: Recreate
  resources:
    requests:
      memory: "750Mi"
      cpu: "250m"
    limits:
      cpu: "500m"
      memory: "1Gi"
  adminUser: "admin"
  adminPassword: "${GRAFANA_ADM_PWD}"

ingress:
  name: momo-ingress
  app_fqdn: "std-momo-store.mooo.com"


ingress-nginx:
  controller:
    service:
      loadBalancerIP: 89.169.171.32
